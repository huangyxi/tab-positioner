/* Processed by Vite in Eleventy */

/* ==============================================
	Material Design 3 Color & Style System
============================================== */
:root {
	/* Light Theme Color Roles */
	--md-sys-color-primary: #6750a4;
	--md-sys-color-on-primary: #ffffff;
	--md-sys-color-background: #fdf7ff;
	--md-sys-color-surface: var(--md-sys-color-background);
	--md-sys-color-surface-variant: #e7e0ec;
	--md-sys-color-on-surface: #1d1b20;
	--md-sys-color-on-surface-variant: #49454f;
	--md-sys-color-outline: #79747e;
	--md-sys-color-outline-variant: #cac4d0;
	--md-sys-color-shadow: #000000;
	--md-sys-color-error: #b3261e;
	--md-sys-color-surface-container-high: #e6e0e9;
	--md-sys-color-surface-container-highest: #e0dae3;
}

@media (prefers-color-scheme: dark) {
	:root {
		/* Dark Theme Color Roles */
		--md-sys-color-primary: #d0bcff;
		--md-sys-color-on-primary: #381e72;
		--md-sys-color-background: #141218;
		--md-sys-color-surface: var(--md-sys-color-background);
		--md-sys-color-on-surface: #e6e1e5;
		--md-sys-color-on-surface-variant: #cac4d0;
		--md-sys-color-outline: #938f99;
		--md-sys-color-outline-variant: #49454f;
		--md-sys-color-error: #f2b8b5;
		--md-sys-color-surface-container-high: #36343b;
		--md-sys-color-surface-container-highest: #403e45;
	}
}


/* ==============================================
	General Body and Layout
============================================== */
body {
	font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;
	background-color: var(--md-sys-color-background);
	color: var(--md-sys-color-on-surface);
	margin: 0 auto;
	width: 100%;
	min-width: 350px;
	max-width: 600px;
}

div.container,
div.details-content {
	display: flex;
	flex-direction: column;
	padding: 16px;
	gap: 16px;
}

header {
	padding: 8px 0;
}

main {
	display: flex;
	flex-direction: column;
	gap: 16px;
}

footer {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 16px;
	margin-top: 8px;
}


/* ==============================================
	Typography (MD3 Type Scale)
============================================== */
h1 {
	font-size: 22px;
	font-weight: 400;
	line-height: 28px;
	margin: 0;
	color: var(--md-sys-color-on-surface);
	text-align: center;
}

label {
	font-size: 12px;
	font-weight: 400;
	line-height: 16px;
}

select,
input[type="number"] {
	font-size: 16px;
	font-weight: 400;
	line-height: 24px;
}

label.checkbox-group .checkbox-label {
	font-size: 14px;
	font-weight: 500;
	line-height: 20px;
	color: var(--md-sys-color-on-surface);
}

summary {
	font-size: 14px;
	font-weight: 500;
	line-height: 20px;
}

button.reset-all {
	font-size: 14px;
	font-weight: 500;
	line-height: 20px;
	color: var(--md-sys-color-primary);
}

div.status {
	font-size: 14px;
	font-weight: 500;
	line-height: 20px;
	text-align: center;
	color: var(--md-sys-color-primary);
}


/* ==============================================
	Checkbox
============================================== */

/* Add position: relative and padding for reset button */
label.checkbox-group {
	display: flex;
	align-items: center;
	cursor: pointer;
	padding: 8px 52px 8px 8px;
	border-radius: 8px;
	transition: background-color 0.2s;
	-webkit-tap-highlight-color: transparent;
	position: relative;
}

label.checkbox-group:not(:has(button.reset:hover)):hover {
	background-color: var(--md-sys-color-surface-container-highest);
}

label.checkbox-group input[type="checkbox"] {
	appearance: none;
	position: absolute;
	opacity: 0;
	cursor: pointer;
}

label.checkbox-group .checkbox-label {
	padding-left: 12px;
	user-select: none;
}

label.checkbox-group .checkbox-visual {
	position: relative;
	width: 18px;
	height: 18px;
	border: 2px solid var(--md-sys-color-outline);
	border-radius: 2px;
	transition: all 0.2s;

	/* Ensure visual part stays in flow */
	flex-shrink: 0;
}

label.checkbox-group input[type="checkbox"]:checked~.checkbox-visual {
	background-color: var(--md-sys-color-primary);
	border-color: var(--md-sys-color-primary);
}

/* The checkmark */
label.checkbox-group .checkbox-visual::after {
	content: "";
	position: absolute;
	display: none;
	left: 5px;
	top: 1px;
	width: 5px;
	height: 10px;
	border: solid var(--md-sys-color-on-primary);
	border-width: 0 2px 2px 0;
	transform: rotate(45deg);
}

label.checkbox-group input[type="checkbox"]:checked~.checkbox-visual::after {
	display: block;
}

label.checkbox-group input[type="checkbox"]:focus-visible~.checkbox-visual {
	box-shadow: 0 0 0 2px var(--md-sys-color-background), 0 0 0 4px var(--md-sys-color-primary);
}


/* ==============================================
	Text Input Field & Select Field
============================================== */
div.input-group,
div.select-group {
	position: relative;
}

div.input-group label,
div.select-group label {
	position: absolute;
	top: -8px;
	left: 12px;
	padding: 0 4px;
	background-color: var(--md-sys-color-background);
	color: var(--md-sys-color-on-surface-variant);
	transition: color 0.1s;
	pointer-events: none;
}

details[open] div.input-group label,
details[open] div.select-group label {
	background-color: var(--md-sys-color-surface-container-high);
}

input[type="number"],
select {
	appearance: none;
	width: 100%;
	box-sizing: border-box;
	padding: 15px 52px 15px 12px;
	outline: 1px solid var(--md-sys-color-outline);
	border: none;
	border-radius: 4px;
	background-color: transparent;
	color: var(--md-sys-color-on-surface);
	transition: outline 0.1s;
}

select {
	padding-right: 92px;
	cursor: pointer;
}

/* Add more padding for stepper buttons */
div.input-group.has-steppers input[type="number"] {
	padding-right: 124px;
}

input[type="number"]:hover,
select:hover {
	outline-width: 2px;
}

input[type="number"]:focus,
select:focus {
	outline-width: 2px;
	outline-color: var(--md-sys-color-primary);
}

input[type="number"]:focus+label,
select:focus+label {
	color: var(--md-sys-color-primary);
}

input[type="number"]:invalid {
	outline-color: var(--md-sys-color-error);
}

input[type="number"]:invalid:focus {
	outline-color: var(--md-sys-color-error);
}

input[type="number"]:invalid+label {
	color: var(--md-sys-color-error);
}

select option {
	/** Valid in Chrome on Windows */
	background-color: var(--md-sys-color-surface);
}


/* ==============================================
	Dropdown of Select & Details
============================================== */
details {
	border: 1px solid var(--md-sys-color-outline-variant);
	border-radius: 4px;
	transition: background-color 0.2s;
	overflow: hidden;
}

details:not([open]):hover {
	background-color: var(--md-sys-color-surface-container-high);
}

details[open] {
	background-color: var(--md-sys-color-surface-container-high);
}

summary {
	position: relative;
	padding: 16px 48px 16px 16px;
	color: var(--md-sys-color-on-surface-variant);
	cursor: pointer;
	list-style: none;
	user-select: none;
	transition: color 0.2s;
}

details[open]>summary {
	color: var(--md-sys-color-on-surface);
}

/* summary::-webkit-details-marker {
	display: none;
} */

/* Custom dropdown arrow */
div.select-group::after,
summary::after {
	content: '';
	position: absolute;
	top: 50%;
	right: 52px;
	width: 24px;
	height: 24px;
	transform: translateY(-50%) rotate(0deg);
	background-color: var(--md-sys-color-on-surface-variant);
	mask: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath d='M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z'/%3e%3c/svg%3e") no-repeat center;
	mask-size: contain;
	transition: transform 0.2s ease-in-out;
}

summary::after {
	right: 16px;
	transition: transform 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

div.select-group:focus-within::after,
details[open]>summary::after {
	transform: translateY(-50%) rotate(180deg);
}

details[open]>summary::after {
	background-color: var(--md-sys-color-on-surface);
}


/* ==============================================
	Buttons
============================================== */
button.reset {
	position: absolute;
	top: 50%;
	right: 12px;
	transform: translateY(-50%);

	/* Touch target size */
	width: 3em;
	height: 3em;
	padding: 0;
	border: none;
	border-radius: 50%;
	background-color: transparent;
	cursor: pointer;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: background-color 0.2s;
}

button.reset::before {
	content: '';
	display: block;
	width: 20px;
	height: 20px;
	mask: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath d='M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z'/%3e%3c/svg%3e") no-repeat center;

	/* minimum_chrome_version: 120 */
	mask-size: 1.5em;
	background-color: var(--md-sys-color-on-surface-variant);
	transition: background-color 0.2s;
}

button.reset:hover {
	background-color: var(--md-sys-color-surface-container-highest);
}

button.reset-all {
	padding: 10px 24px;
	border-radius: 100px;
	border: 1px solid var(--md-sys-color-outline);
	background-color: transparent;
	cursor: pointer;
	transition: background-color 0.2s;
}

button.reset-all:hover {
	background-color: var(--md-sys-color-surface-container-highest);
}


/* ==============================================
	Stepper Buttons (Custom Increment/Decrement for numeric inputs)
============================================== */
button.stepper {
	position: absolute;
	top: 50%;
	right: 52px;
	transform: translateY(-50%);
	width: 2.5em;
	height: 2.5em;
	padding: 0;
	border: none;
	border-radius: 50%;
	background-color: transparent;
	cursor: pointer;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: background-color 0.2s;
}

button.stepper.increment+button.stepper.decrement,
button.stepper.decrement+button.stepper.increment {
	right: 88px;
}

button.stepper:hover {
	background-color: var(--md-sys-color-surface-container-highest);
}

button.stepper::before {
	content: '';
	display: block;
	width: 20px;
	height: 20px;
	background-color: var(--md-sys-color-on-surface-variant);
	mask-size: 1.5em;
}

button.stepper.increment::before {
	mask: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath d='M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z'/%3e%3c/svg%3e") no-repeat center;
}

button.stepper.decrement::before {
	mask: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3e%3cpath d='M19 13H5v-2h14v2z'/%3e%3c/svg%3e") no-repeat center;
}


/* ==============================================
	Status Message
============================================== */
div.status {
	height: 20px;
	opacity: 0;
	transition: opacity 0.5s;
}
